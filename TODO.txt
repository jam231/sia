TODO LIST:

Top priority:
    - Error-free registration of new users with full debug logging.
    - Some clever (or at least not ugly) way to incorporate
      a some kind of descriptive, unique connection id into debug logs.
    - Implementation of IMessage::IsEnoughData() is wrong.
      It assumes It's treating packet as containing length in the begining
      which is not true.
    - Mechanism of registering new user is also wrong.
      If I remeber correctly, we agreed upon:
        1) User sends register request containing
           desired login and password
           Server accepts request, generated goods\resources
           for the new user and sends ok! or
           does not accept, and sends fail "reason"
        OR
        2) User sends register request.
           Then server either accept and generates new user_id,
           password and goods\resources and sends
           ok! "user_id=x password=y" or does not accept and
           sends fail "reason"

      But we did not agreed on:
        1) User sends register request containg amount of
           money which he'd like to receive on start.
     Also we also agreed that the new user_id will be an index
     in database and it will be handling the process of creation
     of new user_id's.

Urgent:
    - Choose error handling strategy // Done, exceptions.

    - Test ConfigManager class      // Done
    - After it has been proven (by test not formally) to work.
      incorporate ConfigManager into Marker class, deleting
      static const fields. // Done.

Quite important:

    - Create a proper hierarchy of exceptions.
    - Choose a logging facility - for nondebug.
    - Incorporate chosen logging facility.

Maybe someday:

    - initParser::parseINI returns QVector<QPair<QString, QString> >
      It may be slow (not likely for the current usage, but still..)
      Find a clever way to overcome this (check if it's even an issue).
